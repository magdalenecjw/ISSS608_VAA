[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "In this website, you will find my coursework prepared for the SMU MITB course ISSS608 Visual Analytics and Applications."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html",
    "href": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages have been installed on the computer. If they are, the packages will be launched.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html#ploting-trellis-boxplots",
    "href": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html#ploting-trellis-boxplots",
    "title": "Hands-on Exercise 1",
    "section": "Ploting trellis boxplots",
    "text": "Ploting trellis boxplots\n\nggplot(data = exam_data,\n       aes(x = CLASS, y = MATHS)) + \n  geom_boxplot(outlier.colour=\"black\",\n               outlier.shape=16,\n               outlier.size=1, \n               notch=FALSE) + \n  facet_grid(cols = vars(GENDER))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS, y = MATHS)) + \n  geom_boxplot(outlier.colour=\"black\",\n               outlier.shape=16,\n               outlier.size=1, \n               notch=FALSE) + \n  facet_grid(rows = vars(GENDER))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = GENDER, y = MATHS)) + \n  geom_boxplot(outlier.colour=\"black\",\n               outlier.shape=16,\n               outlier.size=1, \n               notch=FALSE) + \n  facet_grid(cols = vars(CLASS),\n             rows = vars(GENDER))"
  },
  {
    "objectID": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html#ploting-horizontal-bar-chart",
    "href": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html#ploting-horizontal-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Ploting horizontal bar chart",
    "text": "Ploting horizontal bar chart\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() +\n  theme(panel.background = element_rect(fill = \"light blue\",\n                                        colour = \"light blue\"),\n        panel.grid.major = element_line(linewidth = 0.5,\n                                        linetype = 'solid',\n                                        colour = \"white\"),\n        panel.grid.minor = element_line(linewidth = 0.25,\n                                        linetype = 'solid',\n                                        colour = \"white\"))"
  },
  {
    "objectID": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html#makeover-design",
    "href": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html#makeover-design",
    "title": "Hands-on Exercise 1",
    "section": "Makeover design",
    "text": "Makeover design\n\npacman::p_load(forcats)\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x=RACE)) +\n  geom_bar() + \n  ylim(0,225) + \n  geom_text(\n    stat = \"count\",\n    aes(label=paste0(after_stat(count),\", \",\n                     round(after_stat(count)/sum(after_stat(count))*100,\n                           1),\"%\")),\n                      vjust=-1,\n                      size=3) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y = element_text(angle=0))\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins = 20, \n                 color = \"black\", \n                 fill = \"light blue\") + \n  geom_vline(aes(xintercept = mean(MATHS)),\n             linetype = \"dashed\",\n             color = 'red') +\n  geom_vline(aes(xintercept = median(MATHS)),\n             linetype = \"dashed\",\n             color = 'black')\n\n\n\n\n\neng_bg <- exam_data[,-3]\n\nggplot(data=exam_data, \n       aes(x=ENGLISH, fill=GENDER)) +\n  geom_histogram(data = eng_bg, fill = \"grey\") +\n  geom_histogram(color = \"black\") +\n  facet_wrap(~GENDER) +\n  ylim(0,30)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point(size=1) +\n  xlim(0,105) +\n  ylim(0,105) +\n  geom_vline(aes(xintercept = 50),\n             linetype = \"dashed\",\n             color = 'grey') +\n  geom_hline(aes(yintercept = 50),\n             linetype = \"dashed\",\n             color = 'grey')"
  },
  {
    "objectID": "Hands_on_ex/Hands_on_ex02/Hands_on_ex02.html",
    "href": "Hands_on_ex/Hands_on_ex02/Hands_on_ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "ggplot(data = exam_data,\n       aes(x = MATHS, y = ENGLISH)) + \n  geom_point()"
  },
  {
    "objectID": "Take_home_ex/Take_home_ex01/Take_home_ex01.html",
    "href": "Take_home_ex/Take_home_ex01/Take_home_ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "Task\nIn this Take Home Exercise, age-sex pyramids across nine selected planning areas in trellis display are created using Tableau Desktop.\n\n\nData Source\nThe data “Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022” used for this Take Home Exercise is obtained from the Department of Statistics, Singapore in csv format.\n\n\nCreating the Analytical Visualization on Tableau\n\nLoad the csv file into Tableau as follows: Connect To a File > Text file.\n\n\n\nFig 1\n\n\nIn a new Worksheet, Age (field: “AG”) is plotted against Population (field: “Pop”) by Gender (field: “Sex”).\nSince Age is already grouped into bins, this field can be used as-is in the Row shelf. The age groups are sorted in descending order as follows: right-click on AG > Sort > Sort by Data Source Order - Descending.\n\n\n\nFig 2\n\n\nFor a neater look of the final chart, the age group labels are amended to remove the underscores (_) as follows: Data pane > right-click on AG > Aliases > amend labels accordingly.\n\n\n\nFig 3\n\n\nPrior to creating the age-sex pyramid chart, the Population field will need to be split out - one field for each Gender as follows: Analysis > Create Calculated Field.\nThe first calculated field MalePop is created using the following formula:\nIF [Sex]='Males' THEN [Pop] END\n\n\n\nFig 4a\n\n\nSimilarly, asecond calculated field FemalePop is created with the following formula:\nIF [Sex]='Females' THEN [Pop] END\n\n\n\nFig 4b\n\n\nThe two new fields MalePop and FemalePop are then dragged to the Column shelf.\n\n\n\nFig 5\n\n\nTo create the age-sex pyramid, right-click on the axis for MalePop to reverse it. The axis title is also renamed to “Male”.\n\n\n\nFig 6\n\n\nLikewise, the axis title for FemalePop is renamed as “Female”. In the Marks card for the aggregation SUM(FemalePop), the colour is also adjusted to pink to display a contrast against MalePop.\n\n\n\nFig 7\n\n\nFor the trellis display, age-sex pyramids will be shown for the Top 9 Planning Areas by Population Size.\nTo do this, a calculated field Top9PA (measure) is created with the following formula to compute the total population size for each planning area.\n{FIXED [PA]: SUM([Pop])}\n\n\n\nFig 8a\n\n\nThis calculated field is then duplicated as a dimension field (Top9PA (dimension)) in order to be used as a filter to identify the top 9 planning areas. The dimension field is dragged to the Filters shelf > Top > By field: Top 9 by Top9PA (dimension) - Sum.\n\n\n\nFig 8b\n\n\nPA is dragged to the Column shelf and sorted in descending order: right-click on PA > Sort > Sort by Field - Descending - Field Name: Top9PA (measure) - Aggregation: Sum.\n\n\n\nFig 9a\n\n\nFor a neater look of the final chart, the field labels for the columns are hidden as follows: right-click on field label PA > Hide Field Labels for Columns.\n\n\n\nFig 9b\n\n\nLastly, the Sheet Name, and consequently the Sheet Title, is renamed to Age-Sex Pyramid (for Top 9 Planning Areas by Population Size) before it is saved to Tableau Public.\n\n\n\nFig 10\n\n\n\n\n\nPatterns observed in this Analytical Visualization\n\n\n\n\n\nAcross the top nine planning areas by population size, none of the age-sex pyramids are expansive in nature. This trend is expected of a highly urbanized country such as Singapore, where there is high life expectancy and low mortality and fertility rates.\nWith the exception of Punggol and Seng Kang, most of the top planning areas are observed to have constrictive age-sex pyramids, characterized by urn-shaped graphs with a narrow base. This observation is likely to be attributed to the presence of highly mature housing estates in these planning areas. Notably, Bedok, Tampines and Hougang appear to be slightly “older” estates as a greater number of elderly (aged 70 and over) are observed to reside in these planning areas.\nIn contrast, Punggol and Seng Kang appear more characteristic of newer and younger housing estates where bulk of the population falls within two groups: 30-49 years and 0-19 years. This is likely due to the trend of younger couples moving to newer housing estates like Punggol and Seng Kang over the past decade to start their own families.\nBetween genders, population trends appear largely similar across the top planning areas. However, among the extremely old (80 and older), the female population is observed to be greater than the male population. This trend is aligned with global and local trends of a gender gap in life expectancy."
  }
]