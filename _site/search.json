[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "In this website, you will find my coursework prepared for the SMU MITB course ISSS608 Visual Analytics and Applications."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html",
    "href": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages have been installed on the computer. If they are, the packages will be launched.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html#ploting-trellis-boxplots",
    "href": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html#ploting-trellis-boxplots",
    "title": "Hands-on Exercise 1",
    "section": "Ploting trellis boxplots",
    "text": "Ploting trellis boxplots\n\nggplot(data = exam_data,\n       aes(x = CLASS, y = MATHS)) + \n  geom_boxplot(outlier.colour=\"black\",\n               outlier.shape=16,\n               outlier.size=1, \n               notch=FALSE) + \n  facet_grid(cols = vars(GENDER))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS, y = MATHS)) + \n  geom_boxplot(outlier.colour=\"black\",\n               outlier.shape=16,\n               outlier.size=1, \n               notch=FALSE) + \n  facet_grid(rows = vars(GENDER))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = GENDER, y = MATHS)) + \n  geom_boxplot(outlier.colour=\"black\",\n               outlier.shape=16,\n               outlier.size=1, \n               notch=FALSE) + \n  facet_grid(cols = vars(CLASS),\n             rows = vars(GENDER))"
  },
  {
    "objectID": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html#ploting-horizontal-bar-chart",
    "href": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html#ploting-horizontal-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Ploting horizontal bar chart",
    "text": "Ploting horizontal bar chart\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() +\n  theme(panel.background = element_rect(fill = \"light blue\",\n                                        colour = \"light blue\"),\n        panel.grid.major = element_line(linewidth = 0.5,\n                                        linetype = 'solid',\n                                        colour = \"white\"),\n        panel.grid.minor = element_line(linewidth = 0.25,\n                                        linetype = 'solid',\n                                        colour = \"white\"))"
  },
  {
    "objectID": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html#makeover-design",
    "href": "Hands_on_ex/Hands_on_ex01/Hands_on_ex01.html#makeover-design",
    "title": "Hands-on Exercise 1",
    "section": "Makeover design",
    "text": "Makeover design\n\npacman::p_load(forcats)\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x=RACE)) +\n  geom_bar() + \n  ylim(0,225) + \n  geom_text(\n    stat = \"count\",\n    aes(label=paste0(after_stat(count),\", \",\n                     round(after_stat(count)/sum(after_stat(count))*100,\n                           1),\"%\")),\n                      vjust=-1,\n                      size=3) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y = element_text(angle=0))\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins = 20, \n                 color = \"black\", \n                 fill = \"light blue\") + \n  geom_vline(aes(xintercept = mean(MATHS)),\n             linetype = \"dashed\",\n             color = 'red') +\n  geom_vline(aes(xintercept = median(MATHS)),\n             linetype = \"dashed\",\n             color = 'black')\n\n\n\n\n\neng_bg <- exam_data[,-3]\n\nggplot(data=exam_data, \n       aes(x=ENGLISH, fill=GENDER)) +\n  geom_histogram(data = eng_bg, fill = \"grey\") +\n  geom_histogram(color = \"black\") +\n  facet_wrap(~GENDER) +\n  ylim(0,30)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point(size=1) +\n  xlim(0,105) +\n  ylim(0,105) +\n  geom_vline(aes(xintercept = 50),\n             linetype = \"dashed\",\n             color = 'grey') +\n  geom_hline(aes(yintercept = 50),\n             linetype = \"dashed\",\n             color = 'grey')"
  },
  {
    "objectID": "Hands_on_ex/Hands_on_ex02/Hands_on_ex02.html",
    "href": "Hands_on_ex/Hands_on_ex02/Hands_on_ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "ggplot(data = exam_data,\n       aes(x = MATHS, y = ENGLISH)) + \n  geom_point()"
  },
  {
    "objectID": "Take_home_ex/Take_home_ex01/Take_home_ex01.html",
    "href": "Take_home_ex/Take_home_ex01/Take_home_ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "Task\nIn this Take Home Exercise, age-sex pyramids across nine selected planning areas in trellis display are created using Tableau Desktop.\n\n\nData Source\nThe data “Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022” used for this Take Home Exercise is obtained from the Department of Statistics, Singapore in csv format.\n\n\nPreparation of Analytical Visualisation on Tableau\n\nLoad the csv file into Tableau as follows: Connect To a File > Text file.\n\n\n\nFig 1\n\n\nIn a new Worksheet, Age (field: “AG”) is plotted against Population (field: “Pop”) by Gender (field: “Sex”).\nSince Age is already grouped into bins, this field can be used as-is in the Row shelf. The age groups are sorted in descending order as follows: right-click on AG > Sort > Sort by Data Source Order - Descending.\n\n\n\nFig 2\n\n\nFor a neater look of the final chart, the age group labels are amended to remove the underscores (_) as follows: Data pane > right-click on AG > Aliases > Amend labels accordingly.\n\n\n\nFig 3\n\n\nPrior to creating the age-sex pyramid chart, the Population field will need to be split out - one field for each Gender as follows: Analysis > Create Calculated Field.\nThe first calculated field MalePop is created using the following formula:\nIF [Sex]='Males' THEN [Pop] END\n\n\n\nFig 4a\n\n\nA second calculated field FemalePop is created with the following formula:\nIF [Sex]='Females' THEN [Pop] END\n\n\n\nFig 4b\n\n\nThe two new fields MalePop and FemalePop are dragged to the Column shelf.\n\n\n\nFig 5\n\n\nTo create the age-sex pyramid, right-click on the axis for MalePop to reverse the axis and rename the axis title as “Male”.\n\n\n\nFig 6\n\n\nSimilarly, the axis title for FemalePop is renamed as “Female”. In the Marks card for SUM(FemalePop), the colour is adjusted to pink to show a contrast against MalePop.\n\n\n\nFig 7\n\n\nFor the trellis display, age-sex pyramids will be shown for the Top 9 Planning Areas by Population Size.\nA calculated field Top9PA (measure) is created using the following formula to identify the population size by planning area.\n{FIXED [PA]: SUM([Pop])}\n\n\n\nFig 8a\n\n\nThis calculated field is then duplicated as a dimension field (Top9PA (dimension)) in order to be used as a filter. This filter is dragged to the Filters shelf > Top > By field: Top 9 by Top9PA (dimension) - Sum.\n\n\n\nFig 8b\n\n\nTop9PA (dimension) is dragged to Column shelf and sorted in descending order: right-click on Top9PA (dimension) > Sort > Sort by Data Source Order - Descending.\n\n\n\nFig 9\n\n\nA second worksheet is created as “header labels”: PA is dragged to the Columns shelf and sorted in descending order, and Top9PA (measure) is dragged to the Marks card > Text to create a table. Similar to Sheet 1, Top9PA (dimension) is used to filter this worksheet.\n\n\n\nFig 10\n\n\nBoth worksheets can now be put together in a new Dashboard to create a trellis display.\nIn the Dashboard pane, the Size is adjusted to “Automatic” (Fig 11a). Next, Sheet 2 is stacked above Sheet 1 within the dashboard. The Sheet Title in both sheets will be hidden. The header of Sheet 1 will also be hidden (Fig 11b) since Sheet 2 will be used as the header for thecharts.\nText and Blank objects (Fig 11b) are also inserted as a column header for our table and to align it against the age-sex pyramid charts accordingly. Lastly, a Text object is also inserted for the Dashboard title (Age-Sex Pyramid (for Top 9 Planning Areas by Population Size)).\n\n\n\nFig 11a\n\n\n\n\n\nFig 11b\n\n\n\n\n\nPatterns observed in Analytical Visualisation"
  }
]